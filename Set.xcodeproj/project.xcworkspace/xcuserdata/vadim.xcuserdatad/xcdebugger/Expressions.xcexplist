<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "Grid.recalculate():Grid.swift">
      </ContextState>
      <ContextState
         contextName = "static MatchDetector.detectSet(in:):MatchDetector.swift">
         <PersistentStrings>
            <PersistentString
               value = "matches">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in SetCardGameCheat.extractMatchesFromCombinations(_:):SetCardGameCheat.swift">
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in closure #1 in SetCardGameCheat.extractMatchesFromCombinations(_:):SetCardGameCheat.swift">
         <PersistentStrings>
            <PersistentString
               value = "match != $0">
            </PersistentString>
            <PersistentString
               value = "matches">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ViewController.dealMoreCards():ViewController.swift">
      </ContextState>
      <ContextState
         contextName = "SetGame.getSetFromDeck():SetGame.swift">
      </ContextState>
      <ContextState
         contextName = "SetCardViewCollection.cheatSet():SetCardViewCollection.swift">
      </ContextState>
      <ContextState
         contextName = "ViewController.touchCard(_:):ViewController.swift">
      </ContextState>
      <ContextState
         contextName = "static MatchDetector.combinations&lt;A&gt;(source:takenBy:):MatchDetector.swift">
      </ContextState>
      <ContextState
         contextName = "closure #2 in SetCardViewCollection.layoutSubviews():SetCardViewCollection.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.setCardViewsThatNeedToBeRearranged().count">
            </PersistentString>
            <PersistentString
               value = "self.setCardViewsThatNeedToBeAdded()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SetCardView.chooseDrawStrategy():SetCardView.swift">
         <PersistentStrings>
            <PersistentString
               value = "bounds.width/bounds.height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static MatchDetector.detectSetRecursive(_:_:_:_:):MatchDetector.swift">
      </ContextState>
      <ContextState
         contextName = "SetGame.matchCards():SetGame.swift">
         <PersistentStrings>
            <PersistentString
               value = "(card_1.shading != card_2.shading) &amp;&amp; (card_0.shading != card_2.shading)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SetCardView.chooseDrawStrategy(_:setCard:):SetCardView.swift">
         <PersistentStrings>
            <PersistentString
               value = "bounds.width/bounds.height &lt;= 0.5">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #2 in SetCardViewCollection.replaceMatchedSetCards(_:):SetCardViewCollection.swift">
      </ContextState>
      <ContextState
         contextName = "SetCardViewCollection.replaceMatchedSetCards(_:):SetCardViewCollection.swift">
         <PersistentStrings>
            <PersistentString
               value = "replacingFrames">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ViewController.scaleFonts():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "mainView.bounds.height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SetCardViewCollection.setCardViewHasBeenTouched(setCardView:):SetCardViewCollection.swift">
      </ContextState>
      <ContextState
         contextName = "SetCardGameCheat.extractMatchesFromCombinations(_:):SetCardGameCheat.swift">
         <PersistentStrings>
            <PersistentString
               value = "matches.count-1">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SetCardViewCollection.layoutSubviews():SetCardViewCollection.swift">
         <PersistentStrings>
            <PersistentString
               value = "grid.cellCount-3">
            </PersistentString>
            <PersistentString
               value = "subviewsAsSetCardViews().count">
            </PersistentString>
            <PersistentString
               value = "setCardViews().count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SetCardGameViewController.setCardViewCollection(deckFrameFor:):SetCardGameViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "dealButton.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SetCardGameScoreSystem.update(_:):SetCardGameScoreSystem.swift">
      </ContextState>
      <ContextState
         contextName = "ViewController.dealMoreCardsButton(_:):ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "Array(selectedButtonCards.keys)[0].currentTitleColor">
            </PersistentString>
            <PersistentString
               value = "#colorLiteral(red: 1, green: 0.5763723254, blue: 0, alpha: 1) ">
            </PersistentString>
            <PersistentString
               value = "Array(selectedButtonCards.keys)[0].currentTitleColor.cgColor == #colorLiteral(red: 1, green: 0.5763723254, blue: 0, alpha: 1)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
